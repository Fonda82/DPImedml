# Generated by Django 4.2.23 on 2025-06-23 11:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("patients", "0005_patient_city_patient_guardian_name_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ICD10Code",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Code ICD-10 (ex: F84.0)", max_length=10, unique=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Titre officiel du diagnostic", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description détaillée du diagnostic"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("F00-F99", "Troubles mentaux et du comportement"),
                            ("G00-G99", "Maladies du système nerveux"),
                            ("H00-H59", "Maladies de l'œil et de ses annexes"),
                            (
                                "H60-H95",
                                "Maladies de l'oreille et de l'apophyse mastoïde",
                            ),
                            ("Q00-Q99", "Malformations congénitales"),
                            ("R00-R99", "Symptômes et signes anormaux"),
                            ("Z00-Z99", "Facteurs influençant l'état de santé"),
                            ("OTHER", "Autres"),
                        ],
                        default="OTHER",
                        max_length=10,
                    ),
                ),
                (
                    "is_pediatric_relevant",
                    models.BooleanField(
                        default=False,
                        help_text="Pertinent pour la pédiatrie (0-14 ans)",
                    ),
                ),
                (
                    "is_disability_related",
                    models.BooleanField(default=False, help_text="Lié aux handicaps"),
                ),
                (
                    "is_common_in_mali",
                    models.BooleanField(default=False, help_text="Fréquent au Mali"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Code ICD-10",
                "verbose_name_plural": "Codes ICD-10",
                "ordering": ["code"],
            },
        ),
        migrations.AlterModelOptions(
            name="medicalrecord",
            options={
                "ordering": ["-date"],
                "verbose_name": "Dossier médical",
                "verbose_name_plural": "Dossiers médicaux",
            },
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="chief_complaint",
            field=models.TextField(
                blank=True, help_text="Motif de consultation", null=True
            ),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="clinical_notes",
            field=models.TextField(blank=True, help_text="Notes cliniques", null=True),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="follow_up_instructions",
            field=models.TextField(
                blank=True, help_text="Instructions de suivi", null=True
            ),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="physical_examination",
            field=models.TextField(blank=True, help_text="Examen physique", null=True),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="present_illness",
            field=models.TextField(
                blank=True, help_text="Histoire de la maladie actuelle", null=True
            ),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="treatment_plan",
            field=models.TextField(
                blank=True, help_text="Plan de traitement", null=True
            ),
        ),
        migrations.AlterField(
            model_name="medicalrecord",
            name="description",
            field=models.TextField(
                blank=True, help_text="Description générale", null=True
            ),
        ),
        migrations.AlterField(
            model_name="medicalrecord",
            name="diagnosis",
            field=models.CharField(
                blank=True,
                help_text="Diagnostic (texte libre - legacy)",
                max_length=200,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="medicalrecord",
            name="recommendations",
            field=models.TextField(blank=True, help_text="Recommandations", null=True),
        ),
        migrations.CreateModel(
            name="VitalSigns",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Température (°C)",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "heart_rate",
                    models.PositiveIntegerField(
                        blank=True, help_text="Fréquence cardiaque (bpm)", null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.PositiveIntegerField(
                        blank=True, help_text="Fréquence respiratoire (/min)", null=True
                    ),
                ),
                (
                    "systolic_bp",
                    models.PositiveIntegerField(
                        blank=True, help_text="Tension systolique (mmHg)", null=True
                    ),
                ),
                (
                    "diastolic_bp",
                    models.PositiveIntegerField(
                        blank=True, help_text="Tension diastolique (mmHg)", null=True
                    ),
                ),
                (
                    "oxygen_saturation",
                    models.PositiveIntegerField(
                        blank=True, help_text="Saturation O2 (%)", null=True
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Taille (cm)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Poids (kg)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "head_circumference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Périmètre crânien (cm)",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "bmi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="IMC (calculé)",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "height_percentile",
                    models.PositiveIntegerField(
                        blank=True, help_text="Percentile taille", null=True
                    ),
                ),
                (
                    "weight_percentile",
                    models.PositiveIntegerField(
                        blank=True, help_text="Percentile poids", null=True
                    ),
                ),
                (
                    "bmi_percentile",
                    models.PositiveIntegerField(
                        blank=True, help_text="Percentile IMC", null=True
                    ),
                ),
                (
                    "nutritional_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNDERWEIGHT", "Insuffisance pondérale"),
                            ("NORMAL", "Normal"),
                            ("OVERWEIGHT", "Surpoids"),
                            ("OBESITY", "Obésité"),
                            ("SEVERE_MALNUTRITION", "Malnutrition sévère"),
                            ("MODERATE_MALNUTRITION", "Malnutrition modérée"),
                        ],
                        max_length=25,
                        null=True,
                    ),
                ),
                (
                    "developmental_milestones_appropriate",
                    models.BooleanField(
                        blank=True,
                        help_text="Jalons développementaux appropriés",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes sur les signes vitaux", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "medical_record",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vital_signs",
                        to="patients.medicalrecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signes vitaux",
                "verbose_name_plural": "Signes vitaux",
            },
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="primary_diagnosis_icd10",
            field=models.ForeignKey(
                blank=True,
                help_text="Diagnostic principal (ICD-10)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="primary_diagnoses",
                to="patients.icd10code",
            ),
        ),
        migrations.AddField(
            model_name="medicalrecord",
            name="secondary_diagnoses_icd10",
            field=models.ManyToManyField(
                blank=True,
                help_text="Diagnostics secondaires (ICD-10)",
                related_name="secondary_diagnoses",
                to="patients.icd10code",
            ),
        ),
    ]
